{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name citrus.cursor, :imports nil, :requires {gobj goog.object, goog.object goog.object}, :cljs.spec/speced-vars [], :uses nil, :defs {ReduceCursor {:num-fields 4, :protocols #{citrus.cursor/Object cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name citrus.cursor/ReduceCursor, :file "resources/public/js/compiled/out/citrus/cursor.cljs", :end-column 22, :type true, :column 10, :line 4, :record false, :end-line 4, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}}, ->ReduceCursor {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/citrus/cursor.cljs", :line 4, :column 10, :end-line 4, :end-column 22, :protocols #{citrus.cursor/Object cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([ref path reducer meta]))}, :protocols #{citrus.cursor/Object cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name citrus.cursor/->ReduceCursor, :variadic false, :file "resources/public/js/compiled/out/citrus/cursor.cljs", :end-column 22, :method-params ([ref path reducer meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 4, :end-line 4, :max-fixed-arity 4, :fn-var true, :arglists (quote ([ref path reducer meta])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}}, reduce-cursor-in {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/citrus/cursor.cljs", :line 47, :column 7, :end-line 47, :end-column 23, :arglists (quote ([ref path reducer & {:as options}])), :doc "Given atom with deep nested value, path inside it and reducing function, creates an atom-like structure\n   that can be used separately from main atom, but only for reading value:\n\n     (def state (atom {:users {\"Ivan\" {:children [1 2 3]}}}))\n     (def ivan (citrus.cursor/reduce-cursor-in state [:users \"Ivan\" :children] last))\n     (deref ivan) ;; => 3\n\n  Returned value supports deref, watches and metadata.\n  The only supported option is `:meta`", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(ref path reducer {:as options})], :arglists ([ref path reducer & {:as options}]), :arglists-meta (nil)}}, :name citrus.cursor/reduce-cursor-in, :variadic true, :file "resources/public/js/compiled/out/citrus/cursor.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(ref path reducer {:as options})], :arglists ([ref path reducer & {:as options}]), :arglists-meta (nil)}, :method-params [(ref path reducer {:as options})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 3, :fn-var true, :arglists ([ref path reducer & {:as options}]), :doc "Given atom with deep nested value, path inside it and reducing function, creates an atom-like structure\n   that can be used separately from main atom, but only for reading value:\n\n     (def state (atom {:users {\"Ivan\" {:children [1 2 3]}}}))\n     (def ivan (citrus.cursor/reduce-cursor-in state [:users \"Ivan\" :children] last))\n     (deref ivan) ;; => 3\n\n  Returned value supports deref, watches and metadata.\n  The only supported option is `:meta`"}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:meta reducer path meta :val ref}, :order [:val ref path reducer meta :meta]}, :doc nil}