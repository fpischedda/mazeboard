{:rename-macros {}, :renames {}, :externs {document {}, Error {}, window {}, location {origin {}}}, :use-macros {}, :excludes #{}, :name pushy.core, :imports {History goog.History, Html5History goog.history.Html5History, TokenTransformer goog.history.Html5History.TokenTransformer, EventType goog.history.EventType, Uri goog.Uri}, :requires {events goog.events, goog.events goog.events, clojure.string clojure.string, History goog.History, Html5History goog.history.Html5History, TokenTransformer goog.history.Html5History.TokenTransformer, EventType goog.history.EventType, Uri goog.Uri}, :cljs.spec/speced-vars [], :uses nil, :defs {get-token-from-uri {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 50, :column 8, :end-line 50, :end-column 26, :private true, :arglists (quote ([uri]))}, :private true, :name pushy.core/get-token-from-uri, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 26, :method-params ([uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uri]))}, get-token {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 40, :column 4, :end-line 40, :end-column 13, :protocol pushy.core/IHistory, :doc nil, :arglists (quote ([this]))}, :protocol pushy.core/IHistory, :name pushy.core/get-token, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, set-retrieve-token! {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 19, :column 8, :end-line 19, :end-column 27, :private true, :arglists (quote ([t]))}, :private true, :name pushy.core/set-retrieve-token!, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 27, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, start! {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 41, :column 4, :end-line 41, :end-column 10, :protocol pushy.core/IHistory, :doc nil, :arglists (quote ([this]))}, :protocol pushy.core/IHistory, :name pushy.core/start!, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, new-history {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 31, :column 7, :end-line 31, :end-column 18, :arglists (quote ([] [transformer])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [transformer]), :arglists ([] [transformer]), :arglists-meta (nil nil)}}, :name pushy.core/new-history, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [transformer]), :arglists ([] [transformer]), :arglists-meta (nil nil)}, :method-params ([] [transformer]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists ([] [transformer])}, t_pushy$core16660 {:num-fields 10, :protocols #{pushy.core/IHistory cljs.core/IMeta cljs.core/IWithMeta}, :name pushy.core/t_pushy$core16660, :file "resources/public/js/compiled/out/pushy/core.cljs", :type true, :anonymous true, :column 5, :line 69, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, stop! {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 42, :column 4, :end-line 42, :end-column 9, :protocol pushy.core/IHistory, :doc nil, :arglists (quote ([this]))}, :protocol pushy.core/IHistory, :name pushy.core/stop!, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, update-history! {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 13, :column 8, :end-line 13, :end-column 23, :private true, :arglists (quote ([h]))}, :private true, :name pushy.core/update-history!, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 23, :method-params ([h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([h]))}, set-create-url! {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 25, :column 8, :end-line 25, :end-column 23, :private true, :arglists (quote ([t]))}, :private true, :name pushy.core/set-create-url!, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 23, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, replace-token! {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 39, :column 4, :end-line 39, :end-column 18, :protocol pushy.core/IHistory, :doc nil, :arglists (quote ([this token] [this token title])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([this token] [this token title]), :arglists ([this token] [this token title]), :arglists-meta (nil nil)}}, :protocol pushy.core/IHistory, :name pushy.core/replace-token!, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([this token] [this token title]), :arglists ([this token] [this token title]), :arglists-meta (nil nil)}, :method-params ([this token] [this token title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 39, :max-fixed-arity 3, :fn-var true, :arglists ([this token] [this token title]), :doc nil}, ->t_pushy$core16660 {:protocol-inline nil, :meta {:anonymous true, :protocols #{pushy.core/IHistory cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([dispatch-fn match-fn p__16657 map__16658 processable-url? identity-fn prevent-default-when-no-match? history event-keys meta16661])), :file nil}, :protocols #{pushy.core/IHistory cljs.core/IMeta cljs.core/IWithMeta}, :name pushy.core/->t_pushy$core16660, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :method-params ([dispatch-fn match-fn p__16657 map__16658 processable-url? identity-fn prevent-default-when-no-match? history event-keys meta16661]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 69, :max-fixed-arity 10, :fn-var true, :arglists (quote ([dispatch-fn match-fn p__16657 map__16658 processable-url? identity-fn prevent-default-when-no-match? history event-keys meta16661])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, supported? {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 136, :column 7, :end-line 136, :end-column 17, :arglists (quote ([] [window])), :doc "Returns whether Html5History is supported", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [window]), :arglists ([] [window]), :arglists-meta (nil nil)}}, :name pushy.core/supported?, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [window]), :arglists ([] [window]), :arglists-meta (nil nil)}, :method-params ([] [window]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists ([] [window]), :doc "Returns whether Html5History is supported"}, on-click {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 10, :column 8, :end-line 10, :end-column 16, :private true, :arglists (quote ([funk]))}, :private true, :name pushy.core/on-click, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 16, :method-params ([funk]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([funk]))}, processable-url? {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 44, :column 8, :end-line 44, :end-column 24, :private true, :arglists (quote ([uri]))}, :private true, :name pushy.core/processable-url?, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 24, :method-params ([uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uri]))}, push-state! {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 142, :column 7, :end-line 142, :end-column 18, :arglists (quote ([dispatch-fn match-fn] [dispatch-fn match-fn identity-fn])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([dispatch-fn match-fn] [dispatch-fn match-fn identity-fn]), :arglists ([dispatch-fn match-fn] [dispatch-fn match-fn identity-fn]), :arglists-meta (nil nil)}}, :name pushy.core/push-state!, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([dispatch-fn match-fn] [dispatch-fn match-fn identity-fn]), :arglists ([dispatch-fn match-fn] [dispatch-fn match-fn identity-fn]), :arglists-meta (nil nil)}, :method-params ([dispatch-fn match-fn] [dispatch-fn match-fn identity-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 3, :fn-var true, :arglists ([dispatch-fn match-fn] [dispatch-fn match-fn identity-fn])}, pushy {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 56, :column 7, :end-line 56, :end-column 12, :arglists (quote ([dispatch-fn match-fn & {:keys [processable-url? identity-fn prevent-default-when-no-match?], :or {processable-url? processable-url?, identity-fn identity, prevent-default-when-no-match? (constantly false)}}])), :doc "Takes in three functions:\n    * dispatch-fn: the function that dispatches when a match is found\n    * match-fn: the function used to check if a particular route exists\n    * identity-fn: (optional) extract the route from value returned by match-fn", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(dispatch-fn match-fn {:keys [processable-url? identity-fn prevent-default-when-no-match?], :or {processable-url? processable-url?, identity-fn identity, prevent-default-when-no-match? (constantly false)}})], :arglists ([dispatch-fn match-fn & {:keys [processable-url? identity-fn prevent-default-when-no-match?], :or {processable-url? processable-url?, identity-fn identity, prevent-default-when-no-match? (constantly false)}}]), :arglists-meta (nil)}}, :name pushy.core/pushy, :variadic true, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(dispatch-fn match-fn {:keys [processable-url? identity-fn prevent-default-when-no-match?], :or {processable-url? processable-url?, identity-fn identity, prevent-default-when-no-match? (constantly false)}})], :arglists ([dispatch-fn match-fn & {:keys [processable-url? identity-fn prevent-default-when-no-match?], :or {processable-url? processable-url?, identity-fn identity, prevent-default-when-no-match? (constantly false)}}]), :arglists-meta (nil)}, :method-params [(dispatch-fn match-fn {:keys [processable-url? identity-fn prevent-default-when-no-match?], :or {processable-url? processable-url?, identity-fn identity, prevent-default-when-no-match? (constantly false)}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists ([dispatch-fn match-fn & {:keys [processable-url? identity-fn prevent-default-when-no-match?], :or {processable-url? processable-url?, identity-fn identity, prevent-default-when-no-match? (constantly false)}}]), :doc "Takes in three functions:\n    * dispatch-fn: the function that dispatches when a match is found\n    * match-fn: the function used to check if a particular route exists\n    * identity-fn: (optional) extract the route from value returned by match-fn"}, IHistory {:meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 37, :column 14, :end-line 37, :end-column 22, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {set-token! [[this token] [this token title]], replace-token! [[this token] [this token title]], get-token [[this]], start! [[this]], stop! [[this]]}}}, :protocol-symbol true, :name pushy.core/IHistory, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 22, :column 1, :line 37, :protocol-info {:methods {set-token! [[this token] [this token title]], replace-token! [[this token] [this token title]], get-token [[this]], start! [[this]], stop! [[this]]}}, :info nil, :end-line 37, :tag any, :impls #{pushy.core/t_pushy$core16660}, :doc nil, :jsdoc ("@interface")}, set-token! {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/resources/public/js/compiled/out/pushy/core.cljs", :line 38, :column 4, :end-line 38, :end-column 14, :protocol pushy.core/IHistory, :doc nil, :arglists (quote ([this token] [this token title])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([this token] [this token title]), :arglists ([this token] [this token title]), :arglists-meta (nil nil)}}, :protocol pushy.core/IHistory, :name pushy.core/set-token!, :variadic false, :file "resources/public/js/compiled/out/pushy/core.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([this token] [this token title]), :arglists ([this token] [this token title]), :arglists-meta (nil nil)}, :method-params ([this token] [this token title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists ([this token] [this token title]), :doc nil}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{event-keys meta16661 identity-fn prevent-default-when-no-match? dispatch-fn :processable-url? history p__16657 processable-url? map__16658 match-fn :identity-fn :prevent-default-when-no-match?}, :order [:processable-url? :identity-fn :prevent-default-when-no-match? dispatch-fn match-fn p__16657 map__16658 processable-url? identity-fn prevent-default-when-no-match? history event-keys meta16661]}, :doc nil}