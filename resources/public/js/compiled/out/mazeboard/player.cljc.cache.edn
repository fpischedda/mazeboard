{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name mazeboard.player, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {make-player {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljc/mazeboard/player.cljc", :line 3, :column 7, :end-line 3, :end-column 18, :arglists (quote ([name start-row start-col]))}, :name mazeboard.player/make-player, :variadic false, :file "src/cljc/mazeboard/player.cljc", :end-column 18, :method-params ([name start-row start-col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 3, :fn-var true, :arglists (quote ([name start-row start-col]))}, player-position {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljc/mazeboard/player.cljc", :line 7, :column 7, :end-line 7, :end-column 22, :arglists (quote ([player]))}, :name mazeboard.player/player-position, :variadic false, :file "src/cljc/mazeboard/player.cljc", :end-column 22, :method-params ([player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([player]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:name :col :position :row}, :order [:name :position :row :col]}, :doc nil}