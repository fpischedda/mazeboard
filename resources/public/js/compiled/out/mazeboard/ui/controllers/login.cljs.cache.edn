{:rename-macros {}, :renames {}, :externs {JSON {parse {}, stringify {}}}, :use-macros {}, :excludes #{}, :name mazeboard.ui.controllers.login, :imports nil, :requires {config mazeboard.ui.config, mazeboard.ui.config mazeboard.ui.config}, :cljs.spec/speced-vars [], :uses nil, :defs {initial-state {:name mazeboard.ui.controllers.login/initial-state, :file "/Users/francesco/own/mazeboard/src/cljs/mazeboard/ui/controllers/login.cljs", :line 5, :column 1, :end-line 5, :end-column 19, :meta {:file "/Users/francesco/own/mazeboard/src/cljs/mazeboard/ui/controllers/login.cljs", :line 5, :column 6, :end-line 5, :end-column 19}, :tag cljs.core/IMap}, control {:name mazeboard.ui.controllers.login/control, :file "/Users/francesco/own/mazeboard/src/cljs/mazeboard/ui/controllers/login.cljs", :line 7, :column 1, :end-line 7, :end-column 18, :meta {:file "/Users/francesco/own/mazeboard/src/cljs/mazeboard/ui/controllers/login.cljs", :line 7, :column 11, :end-line 7, :end-column 18}, :tag cljs.core/MultiFn}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:login-error :errors :get :key :init :load-profile :password :method :default :logout :value :username :params :state :op :token :error-fn :on-ready :with-credentials? :form-params :profile-loaded :url :http :post :login-successful :error :set :hierarchy :set-token :body :local-storage :keywordize-keys :goto :success-fn :profile :text :authenticate}, :order [:hierarchy :default :init :state :set-token :load-profile :local-storage :op :key :on-ready :get :profile-loaded :keywordize-keys :goto :profile :token :url :authenticate :http :method :success-fn :error-fn :params :post :login-successful :login-error :with-credentials? :form-params :username :password :body :errors :value :set :error :text :logout]}, :doc nil}