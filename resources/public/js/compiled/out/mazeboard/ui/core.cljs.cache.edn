{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name mazeboard.ui.core, :imports nil, :requires {citrus citrus.core, router-ctrl mazeboard.ui.controllers.router, bidi.bidi bidi.bidi, dom mazeboard.ui.dom, board mazeboard.board, mazeboard.ui.handlers.http mazeboard.ui.handlers.http, bidi bidi.bidi, mazeboard.ui.handlers.navigation mazeboard.ui.handlers.navigation, rum.core rum.core, mazeboard.ui.handlers.session mazeboard.ui.handlers.session, rum rum.core, router mazeboard.ui.router, citrus.core citrus.core, mazeboard.ui.controllers.router mazeboard.ui.controllers.router, mazeboard.ui.controllers.dashboard mazeboard.ui.controllers.dashboard, mazeboard.ui.controllers.login mazeboard.ui.controllers.login, mazeboard.ui.router mazeboard.ui.router, dashboard mazeboard.ui.controllers.dashboard, accountant.core accountant.core, mazeboard.ui.dom mazeboard.ui.dom, string clojure.string, mazeboard.board mazeboard.board, login mazeboard.ui.controllers.login, mazeboard.ui.components.app mazeboard.ui.components.app, mazeboard.ui.handlers.local-storage mazeboard.ui.handlers.local-storage, clojure.string clojure.string, app mazeboard.ui.components.app, mazeboard.player mazeboard.player, player mazeboard.player}, :cljs.spec/speced-vars [], :uses {set-token mazeboard.ui.handlers.session, local-storage mazeboard.ui.handlers.local-storage, goto mazeboard.ui.handlers.navigation, http mazeboard.ui.handlers.http, configure-navigation! accountant.core}, :defs {routes {:name mazeboard.ui.core/routes, :file "src/cljs/mazeboard/ui/core.cljs", :line 22, :column 1, :end-line 22, :end-column 12, :meta {:file "/Users/francesco/own/mazeboard/src/cljs/mazeboard/ui/core.cljs", :line 22, :column 6, :end-line 22, :end-column 12}, :tag cljs.core/IVector}, reconciler {:name mazeboard.ui.core/reconciler, :file "src/cljs/mazeboard/ui/core.cljs", :line 29, :column 1, :end-line 29, :end-column 20, :meta {:file "/Users/francesco/own/mazeboard/src/cljs/mazeboard/ui/core.cljs", :line 29, :column 10, :end-line 29, :end-column 20}, :tag any}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljs/mazeboard/ui/core.cljs", :line 53, :column 7, :end-line 53, :end-column 19, :arglists (quote ([]))}, :name mazeboard.ui.core/on-js-reload, :variadic false, :file "src/cljs/mazeboard/ui/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {rum rum.core, rum.core rum.core}, :cljs.analyzer/constants {:seen #{:controllers :path-exists? :push :init :router :load-profile :game :logout :dashboard :state :login :id :http :set-token :effect-handlers :local-storage :nav-handler :goto :profile}, :order [:dashboard :login :logout :id :game :state :controllers :effect-handlers :router :http :goto :set-token :local-storage :init :load-profile :profile :push :nav-handler :path-exists?]}, :doc nil}