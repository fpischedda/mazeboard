{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name mazeboard.board, :imports nil, :requires {tile mazeboard.tile, mazeboard.tile mazeboard.tile}, :cljs.spec/speced-vars [], :uses nil, :defs {make-board-row {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljc/mazeboard/board.cljc", :line 4, :column 7, :end-line 4, :end-column 21, :arglists (quote ([size tile-fn]))}, :name mazeboard.board/make-board-row, :variadic false, :file "src/cljc/mazeboard/board.cljc", :end-column 21, :method-params ([size tile-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([size tile-fn]))}, make-board-tiles {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljc/mazeboard/board.cljc", :line 8, :column 7, :end-line 8, :end-column 23, :arglists (quote ([width height tile-fn]))}, :name mazeboard.board/make-board-tiles, :variadic false, :file "src/cljc/mazeboard/board.cljc", :end-column 23, :method-params ([width height tile-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 3, :fn-var true, :arglists (quote ([width height tile-fn]))}, make-board {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljc/mazeboard/board.cljc", :line 12, :column 7, :end-line 12, :end-column 17, :arglists (quote ([width height] [width height tile-fn])), :doc "creates a board, if no tile-fn function is provided tile/random-tile will be used", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([width height] [width height tile-fn]), :arglists ([width height] [width height tile-fn]), :arglists-meta (nil nil)}}, :name mazeboard.board/make-board, :variadic false, :file "src/cljc/mazeboard/board.cljc", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([width height] [width height tile-fn]), :arglists ([width height] [width height tile-fn]), :arglists-meta (nil nil)}, :method-params ([width height] [width height tile-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists ([width height] [width height tile-fn]), :doc "creates a board, if no tile-fn function is provided tile/random-tile will be used"}, tile-at {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljc/mazeboard/board.cljc", :line 19, :column 7, :end-line 19, :end-column 14, :arglists (quote ([board row col]))}, :name mazeboard.board/tile-at, :variadic false, :file "src/cljc/mazeboard/board.cljc", :end-column 14, :method-params ([board row col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([board row col]))}, update-board {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljc/mazeboard/board.cljc", :line 23, :column 7, :end-line 23, :end-column 19, :arglists (quote ([board row col new-tile]))}, :name mazeboard.board/update-board, :variadic false, :file "src/cljc/mazeboard/board.cljc", :end-column 19, :method-params ([board row col new-tile]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 4, :fn-var true, :arglists (quote ([board row col new-tile]))}, rotate-board-tile {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljc/mazeboard/board.cljc", :line 27, :column 7, :end-line 27, :end-column 24, :arglists (quote ([board row col dir]))}, :name mazeboard.board/rotate-board-tile, :variadic false, :file "src/cljc/mazeboard/board.cljc", :end-column 24, :method-params ([board row col dir]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 4, :fn-var true, :arglists (quote ([board row col dir]))}, board-width {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljc/mazeboard/board.cljc", :line 31, :column 7, :end-line 31, :end-column 18, :arglists (quote ([board]))}, :name mazeboard.board/board-width, :variadic false, :file "src/cljc/mazeboard/board.cljc", :end-column 18, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, board-height {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljc/mazeboard/board.cljc", :line 35, :column 7, :end-line 35, :end-column 19, :arglists (quote ([board]))}, :name mazeboard.board/board-height, :variadic false, :file "src/cljc/mazeboard/board.cljc", :end-column 19, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board]))}, is-inside? {:protocol-inline nil, :meta {:file "/Users/francesco/own/mazeboard/src/cljc/mazeboard/board.cljc", :line 39, :column 7, :end-line 39, :end-column 17, :arglists (quote ([board row col]))}, :name mazeboard.board/is-inside?, :variadic false, :file "src/cljc/mazeboard/board.cljc", :end-column 17, :method-params ([board row col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 3, :fn-var true, :arglists (quote ([board row col]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:width :tiles :height}, :order [:width :height :tiles]}, :doc nil}